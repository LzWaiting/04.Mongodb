python --> pymongo 模块（第三方模块，需要安装）
	
	安装：sudo pip3 install pymongo

	操作步骤
		1. 创建mongodb的数据库连接对象
			conn = pymongo.MongoClient('localhost',27017)
		2. 生成数据库对象
			db = conn.stu
			db = conn['stu']	(__setitem__,__getitem__)
		3. 生成集合对象
			myset = db.class0
			myset = db['class0']	(__setitem__,__getitem__)
		4. 集合操作（增删改查索引聚合）
		5. 关闭数据库连接
			conn.close()
		示例：见mongo.py

	操作：
		插入：
			insert()
			insert_one()
			insert_many()
			save()
		查找：
			find()
			功能：查找数据库内容
			参数：同 mongo shell find()
			返回值：返回一个结果游标对象
			find_one()
			功能：查询第一条符合条件的文档
			参数：同 mongo shell findOne()
			返回值：返回一个字典
			* 在pymongo中所有操作符的用法同mongo shell,只是操作时加引号，以字符串的方式写入python代码中
			cursor 对象的属性
				next()
				limit()
				skip()
				sort()	# 参数不用字典，使用元组
				count()
			* 使用for 或者next游标位置不再指向开头位置的时候，调用limit skip sort就会报错
		修改：
			update(query,update,upsert=False,multi=False)
			update_many()	# multi=True默认
			update_one()	# multi=False默认

		删除：
			remove(query,multi=True)
			multi默认是True表示删除所有query过滤文档，设置为False表示只删除第一个
		
		* python 中 True ==> true
					False ==> false
					None ==> null

		索引：
			ensure_index()	--> ensureIndex()
			list_index()	--> getIndexes()
			drop_index()	--> dropIndex()
			drop_indexes()	--> dropIndexes()
			示例：见 mongo1.py

		聚合：
			aggregate([])
			参数：和mongo shell 一样
			返回值：返回和find()函数相同的游标
			示例：见exercise.py

		文件：
			大文件读取
				pymongo 实现 gridfs 存储
				将文件以grid方案存放到数据库
				import gridfs	(随mongo模块同时安装的)
				GridFS()
					功能：生成grid数据库对象

				示例：存入数据库，见grid_write.py
					 读取数据库文件，见grid_read.py
			小文件读取
				import bson	(随mongo模块一同安装)
				bson.binary.Binary()
					功能：将bytes格式子串转换为mongodb的二进制存储格式
				示例：存储/提取，见save_file.py